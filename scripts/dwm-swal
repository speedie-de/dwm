#!/bin/sh

# Default configuration, should be fine for most users.
SWAL_DEFAULT_CONFIG()
{
  SWAL_WALLPAPERDIR=$HOME/Wallpapers
  case "$RUNLAUNCHER" in
  "") RUNLAUNCHER=dmenu ;;
  esac
  SWAL_OPT=xwallpaper
  SWAL_BINDIR=$BINDIR
  SWAL_EXPORTDIR=$HOME/.config/swal
  SWAL_FSIGNAL_RELOAD_XRESOURCES=18
  SWAL_IMAGE_VIEWER=sxiv
  SWAL_ASK_WAL=false
}

SWAL_MKCONFIG() {
  mkdir -p $SWAL_EXPORTDIR
  touch $SWAL_EXPORTDIR/config
  SWAL_ASK_WAL_NEW=$SWAL_ASK_WAL
  SWAL_WALLPAPERDIR_NEW=$SWAL_WALLPAPERDIR

  SWAL_CHANGE_WALLPAPERDIR() {
		SWAL_WALLPAPERDIR_NEW=$(printf "Your wallpaper directory" | $RUNLAUNCHER -g 1 -p "Where are all your wallpapers stored?" -l 1)
  }

  SWAL_CHANGE_ASK_WAL() {
		wal -v > /dev/null && SWAL_ASK_WAL_NEW=$(printf "Yes\nNo" | $RUNLAUNCHER -g 1 -p "Ask whether or not to use Pywal?" -l 2 | sed "s|No|false|g" | sed "s|Yes|true|g")
  }

  SWAL_CHANGE_IMAGE_VIEWER() {
		SWAL_IMAGE_VIEWER=$(printf "" | $RUNLAUNCHER -g 1 -p "What image viewer do you want to use for previews?" -l 1)
  }

  USER_OPT_ACTION=$(printf "Wallpaper directory\nPywal\nImage Viewer\n------\nExit" | $RUNLAUNCHER -g 1 -l 10 -p "What setting do you want to change?")

  case "$USER_OPT_ACTION" in
  "") $0 && exit 0 ;;
  "Wallpaper directory") SWAL_CHANGE_WALLPAPERDIR && CHANGED=true ;;
  "Pywal") SWAL_CHANGE_ASK_WAL && CHANGED=true ;;
  "Image Viewer") SWAL_CHANGE_IMAGE_VIEWER && CHANGED=true ;;
  "Exit") exit 0 ;;
  "------") $0 && exit 0 ;;
  esac

  case "$CHANGED" in
  "") $0 && exit 0 ;;
  esac

  case "$SWAL_ASK_WAL_NEW" in
  "true") ASKED=true ;;
  "false") ASKED=true ;;
  esac

  if [ "$ASKED" = "" ]; then
		$0 && exit 0
  fi

  printf "SWAL_WALLPAPERDIR=$SWAL_WALLPAPERDIR_NEW" > $SWAL_EXPORTDIR/config
  printf "\n#RUNLAUNCHER=$RUNLAUNCHER" >> $SWAL_EXPORTDIR/config
  printf "\n#SWAL_OPT=$SWAL_OPT" >> $SWAL_EXPORTDIR/config
  printf "\n#SWAL_BINDIR=$SWAL_BINDIR" >> $SWAL_EXPORTDIR/config
  printf "\n#SWAL_EXPORTDIR=$SWAL_EXPORTDIR" >> $SWAL_EXPORTDIR/config
  printf "\nSWAL_IMAGE_VIEWER='$SWAL_IMAGE_VIEWER'" >> $SWAL_EXPORTDIR/config
  printf "\nSWAL_ASK_WAL=$SWAL_ASK_WAL_NEW" >> $SWAL_EXPORTDIR/config
}

BINDIR=$(cat /usr/share/dwm-bindir)

# Source things
SWAL_SOURCE()
{
  ls "$SWAL_EXPORTDIR/config" || SWAL_MKCONFIG
  . "$SWAL_EXPORTDIR/config"
}

SWAL_CHECK()
{
  if [ "$SWAL_IMAGE_VIEWER" = "" ]; then
		ls "$SWAL_BINDIR/feh" && SWAL_IMAGE_VIEWER=feh
		ls "$SWAL_BINDIR/sxiv" && SWAL_IMAGE_VIEWER=sxiv
  fi

  ls "$SWAL_BINDIR/xwallpaper" || SWAL_DIE
}

SWAL_DIE()
{
  SWAL_EXIT=1 && exit 1
}

SWAL_HELP() {
  echo "swal is a minimal xwallpaper frontend for dmenu/rofi."
  echo "-w /path/to/wallpaper.png | Set the wallpaper specified."
  echo "-h | View this help screen." 
  echo "-f X | fsignal signum to reload .Xresources (with reloadxresources, fsignal and .Xresources dwm patches)"
}

SWAL_SELWALLPAPER()
{
  case "$NEW1" in
  "") ls /tmp/swal_cpath || SWAL_SELWALLPAPER="$(printf "$(ls "$SWAL_WALLPAPERDIR")\n------\n..\nOptions\nPreview\nExit" | $RUNLAUNCHER -g 1 -l 100 -p "What wallpaper would you like to set?" -l 20)" ;;
  "-w") SWAL_SELWALLPAPER="$(basename "$NEW2")" && touch /tmp/swal_cpath ;;
  "-h") SWAL_HELP | $RUNLAUNCHER -g 1 -l 90 ;;
  "-f") SWAL_FSIGNAL_RELOAD_XRESOURCES="$NEW2" ;;
  esac
  
  case "$NEW3" in
  "-w") SWAL_SELWALLPAPER="$(basename "$NEW4")" && touch /tmp/swal_cpath ;;
  "-h") SWAL_HELP | $RUNLAUNCHER -g 1 -l 90 ;;
  "-f") SWAL_FSIGNAL_RELOAD_XRESOURCES="$NEW4" ;;
  esac

  case "$NEW5" in
  "-w") SWAL_SELWALLPAPER="$(basename "$NEW6")" && touch /tmp/swal_cpath ;;
  "-h") SWAL_HELP | $RUNLAUNCHER -g 1 -l 90 ;;
  "-f") SWAL_FSIGNAL_RELOAD_XRESOURCES="$NEW6" ;;
  esac
}

SWAL_SETTYPE()
{
  case "$SWAL_SELWALLPAPER" in
  "Options") SWAL_MKCONFIG && $0 $1 $2 $3 && exit 0 ;;
  "") $0 && exit 0 ;;
  "Preview") $SWAL_IMAGE_VIEWER * ; $0 ; exit 0 ;;
  "..") cd "$SWAL_WALLPAPERDIR/.." && SWAL_WALLPAPERDIR="$(pwd)" && SWAL_SELWALLPAPER && SET && exit 0 ;;
  "Exit") exit 0 ;;
  "------") $0 && exit 0 ;;
  esac

  # Check if it's a directory
  if [ -d "$SWAL_WALLPAPERDIR/$SWAL_SELWALLPAPER" ]; then
		cd "$SWAL_WALLPAPERDIR/$SWAL_SELWALLPAPER" && SWAL_WALLPAPERDIR="$SWAL_WALLPAPERDIR/$SWAL_SELWALLPAPER" && SWAL_SELWALLPAPER && SET && exit 0
  fi

  #test "$SWAL_WALLPAPERDIR/$SWAL_SELWALLPAPER" || notify-send "Selected wallpaper does not exist."; $0 && exit 0
  # had to comment because this will not work for some reason im not able to figure out

  SWAL_TYPE=$(printf "Center\nTile\nZoom\nStretch\n------\nPreview\nExit" | $RUNLAUNCHER -p "How do you want to set the wallpaper?" -g 1 -l 7)
  
  case "$SWAL_TYPE" in
  "Center") SWAL_TYPE=center ;;
  "Tile") SWAL_TYPE=tile ;;
  "Zoom") SWAL_TYPE=zoom ;;
  "Stretch") SWAL_TYPE=stretch ;;
  "Preview") $SWAL_IMAGE_VIEWER "$SWAL_WALLPAPERDIR/$SWAL_SELWALLPAPER" && exit 0 ;;
  "Exit") exit 0 ;;
  "------") $0 && exit 0 ;;
  "") $0 && exit 0 ;;
  esac

  SWAL_TYPE="--$SWAL_TYPE"
  SWAL_WAL_STATUS="0"

  case "$SWAL_ASK_WAL" in
  "true") wal -v && SWAL_USE_WAL=$(printf "Yes\nNo" | $RUNLAUNCHER -g 1 -l 90 -p "Do you want to use Pywal?" -l 2) && SWAL_WAL_STATUS="1" ;;
  "false") wal -v && xrdb -query | grep color66 > /dev/null && SWAL_USE_WAL="Yes" && SWAL_WAL_STATUS="1" ;;
  esac

  # Don't perform pywal actions if not installed/used
  if [ "$SWAL_WAL_STATUS" = "0" ]; then
		SWAL_USE_WAL="No"
  fi
}

SWAL_SETWALLPAPER()
{
  $SWAL_OPT $SWAL_TYPE "$SWAL_WALLPAPERDIR/$SWAL_SELWALLPAPER"
}

SWAL_EXPORT_SCRIPT()
{
  printf "#!/bin/sh\n$SWAL_OPT $SWAL_TYPE ""'$SWAL_WALLPAPERDIR/$SWAL_SELWALLPAPER'""" > $SWAL_EXPORTDIR/swal_wm
  chmod +x $SWAL_EXPORTDIR/swal_wm
  rm -f ~/.config/swal/CurrentWallpaper && ln -s "$SWAL_WALLPAPERDIR/$SWAL_SELWALLPAPER" ~/.config/swal/CurrentWallpaper
}

SWAL_EXPORT_SCRIPT_WAL()
{
  printf "#!/bin/sh\n$SWAL_OPT $SWAL_TYPE ""'$SWAL_WALLPAPERDIR/$SWAL_SELWALLPAPER'""\nwal -i ""'$SWAL_WALLPAPERDIR/$SWAL_SELWALLPAPER'""\nxrdb ~/.cache/wal/colors.Xresources\nxsetroot -name 'fsignal:$SWAL_FSIGNAL_RELOAD_XRESOURCES'" > $SWAL_EXPORTDIR/swal_wm
  chmod +x $SWAL_EXPORTDIR/swal_wm
  wal -i "'$SWAL_WALLPAPERDIR/$SWAL_SELWALLPAPER'" && xrdb ~/.cache/wal/colors.Xresources && xsetroot -name "fsignal:$SWAL_FSIGNAL_RELOAD_XRESOURCES" # Compatibility with my dwm build
  rm -f ~/.config/swal/CurrentWallpaper && ln -s "$SWAL_WALLPAPERDIR/$SWAL_SELWALLPAPER" ~/.config/swal/CurrentWallpaper
  
  if [ -e "/usr/bin/${RUNLAUNCHER}_run" ]; then
		grep "PYWAL" ${BINDIR}${RUNLAUNCHER}_run && printf "\n${RUNLAUNCHER}_run -r" >> $SWAL_EXPORTDIR/swal_wm
		${RUNLAUNCHER}_run -r # For speedie.gq/dmenu
        pgrep -x status && pkill status && status & # For built in status bar
        dwm_run -r
  fi
}

SWAL_XRESOURCES()
{
  xrdb -query | grep "swal" | sed "s|: |=|" | sed "s|swal.|swal_|" > /tmp/swal
  . /tmp/swal
}

SWAL_SENDNOTIFICATION() {
  test /usr/bin/notify-send && notify-send "ï„ˆ $SWAL_SELWALLPAPER set as wallpaper in $(echo $SWAL_TYPE | sed "s|--||g") mode."
  exit 0
}

# Arguments
NEW1=$1
NEW2=$2
NEW3=$3
NEW4=$4
NEW5=$5
NEW6=$6

rm -f /tmp/swal_cpath
SWAL_DEFAULT_CONFIG
SWAL_SOURCE || SWAL_DIE
SWAL_XRESOURCES
SWAL_CHECK || SWAL_DIE
SWAL_SELWALLPAPER || SWAL_DIE

SET() {
  SWAL_SETTYPE || SWAL_DIE
  SWAL_SETWALLPAPER || SWAL_DIE

  # Pywal
  case "$SWAL_USE_WAL" in
  "Yes") SWAL_EXPORT_SCRIPT_WAL || SWAL_DIE ;;
  "No") SWAL_EXPORT_SCRIPT || SWAL_DIE ;;
  "") exit 0 ;;
  esac

  SWAL_SENDNOTIFICATION
}

SET

$0 && exit 0
