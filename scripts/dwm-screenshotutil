#!/bin/sh

DATE=$(date "+%T_%D" | sed "s|:|-|g" | sed "s|/||g")

rm -f /tmp/screenshot*

case "$RUNLAUNCHER" in
"") RUNLAUNCHER=dmenu ;;
esac

BINDIR=$(cat /usr/share/dwm-bindir)
EXPORTDIR=$HOME/.config/dwm-de/screenshotutil

mkdir -p $EXPORTDIR

# Config
SHOWCURSOR="true" # Show cursor or not (true/false)

if [ -e "$EXPORTDIR/config" ]; then
		. $EXPORTDIR/config
else
		printf "SHOWCURSOR=$SHOWCURSOR # Show cursor or not (true/false)" > $EXPORTDIR/config
fi

case "$SHOWCURSOR" in
"true") ARG2="" ;;
"false") ARG2=u ;;
esac


# Sleep argument (-t)
if [ "$1" = "-t" ]; then
		sleep $2 && maim -s${ARG2}B > /tmp/screenshot-$DATE || exit 0
fi

if [ "$1" = "-o" ]; then
		cat $2 > /tmp/screenshot-$DATE
fi

if [ "$1" = "-f" ]; then
		if [ -e "/tmp/screenshot-$DATE" ]; then
				exists=true
		else
				maim -${ARG2}B > /tmp/screenshot-$DATE || exit 0 
		fi
else
		if [ -e "/tmp/screenshot-$DATE" ]; then
				exists=true
		else
				maim -s${ARG2}B > /tmp/screenshot-$DATE || exit 0
		fi
fi

if [ -e "/tmp/screenshot-$DATE" ]; then
		U_INPUT="$(printf "Image\nURL\nSave" | $RUNLAUNCHER -l 3 -p "Copy to clipboard as an: ")"
else
		exit 0
fi

# Send notification for URL
SENDNOTIF_URL() {
  if [ -e "${BINDIR}notify-send" ]; then
		notify-send "Screenshot copied to clipboard."
  fi
}

# Send notifcation for local image save
SENDNOTIF_SAVE() {
  if [ -e "${BINDIR}notify-send" ]; then
		notify-send "Screenshot saved to $SAVEDIR."
  fi
}

# Send notification for image copied to clipboard
SENDNOTIF_IMG() {
  if [ -e "${BINDIR}notify-send" ]; then
		notify-send "Screenshot copied to clipboard."
  fi
}

# Perform actions based on user input
case "$U_INPUT" in
"Image") cat /tmp/screenshot-$DATE | xclip -selection clipboard -t image/png && SENDNOTIF_IMG ;;
"URL") printf "\n" | xclip -selection clipboard && curl -s -F source=@"/tmp/screenshot-$DATE" -F "type=file" -F "action=upload" "https://imgbb.com/json" | sed "s/\\\\//g; s/\"/\\n/g" | grep -m 1 -A 2 url | tail -n 1 | xclip -selection clipboard && SENDNOTIF_URL ;;
"Save") SAVEDIR=$(printf "$HOME/Screenshot.png" | $RUNLAUNCHER -l 1 -g 1 -p "Where do you want to save it? (Including filename)") && cat /tmp/screenshot-$DATE > $SAVEDIR && SENDNOTIF_SAVE ;;
esac

rm -f /tmp/screenshot* # Remove the screenshots
